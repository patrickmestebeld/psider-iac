events{
}

http {
    access_log /dev/stdout;
    error_log /dev/stdout info;
    
    upstream psidercms-local {
        server host.docker.internal:5000;
    }

    upstream psidercmsui-local {
        server psidercmsui:4200;
    }
    
    server {
        listen       80;
        listen       [::]:80;
        listen       443 ssl;
        listen       [::]:443 ssl;
    
        server_name cms.psider.local psider.local localhost;
    
        proxy_redirect          off;
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        client_max_body_size    10m;
        client_body_buffer_size 128k;
        proxy_connect_timeout   90;
        proxy_send_timeout      90;
        proxy_read_timeout      90;
        proxy_buffers           32 4k;
            
        ssl_certificate           /etc/ssl/certs/psider.crt;
        ssl_certificate_key       /etc/ssl/certs/psider.decrypted.key;
        ssl_session_timeout       1d;
        ssl_protocols             TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;
        ssl_ciphers               ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_session_cache         shared:SSL:10m;
        ssl_session_tickets       off;
        ssl_stapling              off;
                    
        location ~* ^/(api|identity|.well-known|connect|_configuration) {
            proxy_pass http://psidercms-local$request_uri;
        }
        
        location ~* \.(pdf|png|gif|jpg|jpeg)$ {
            proxy_pass http://psidercms-local$request_uri;
        }
        
        location / {
            proxy_pass http://psidercmsui-local$request_uri;
        }
    }
    
    server {
        listen   80 default_server;
        # listen [::]:80 default_server deferred;
        return   444;
    }  
}
